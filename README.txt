Developed by: Sharvari Khandvikar
Employee ID: 911312

This project is developed for pension management system web application. This folder has a structure as following:

1. Microservices:

This folder contains the backend of the web application including 3 microservices as followes:

	1. auth-service: This service provides the JWT authentication to reach other services. This service will have the in
	users stored using in memory H2 database. Only valid user is allowed to get the token and this token will be given to other 
	endpoints as 'Authorization' header. Following are some dummy users created to pass the validation:
	|Username|Password|
	| user1  | user1  |
	| user2  | user2  |
	| user3  | user3  |
	| user4  | user4  |
	| user5  | user5  |


	2. Pensioner-details-service: This service provides the pensioner details and save new pensioner post authentication. Some 
	dummy pensioner details provided in resources section of this service in excel. This service end points needs authorization 
	header with value of jwt token (provide the exact token generated in /auth/login endpoint from authentication service)

	3. process-pension-service: This service calls pensioner details service for extracting pensioner details and calculates the 
	pension amount and bank service changes to save the pension details in the database and retuns them. This service also need 
	value of jwt token in Authorization header to reach to endpoints post authentication.

	4.End points: This file contains endpoints for different to reach respective rest services.

2. pension-management:

This folder is the frontent angular application code. The 'src' folder contains all components.

	1. app component:  This is main component for routing to repective component. It is composed of following component.

		1. authentication component: Performs authentication and creates login page.

		2. pension-portal component: Pension management portal is created with following components
			
			1. error-details component: provides the error with details as per error generated by the endpoint.
			2. pension-details component: call process pension service and provides the pension details.
			3. pensioner-details componet: call pensioner details service and provides the pensioner details and also add or
			update pensioner.

